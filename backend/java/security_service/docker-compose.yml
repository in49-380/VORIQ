services:
  postgres:
    image: postgres:15-alpine
    container_name: postgres-container
    environment:
      POSTGRES_DB: ${DB_NAME:-securitydb}
      POSTGRES_USER: ${DB_USERNAME:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:?set in .env}
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 3s
      retries: 30
    restart: unless-stopped

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin-container
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-admin@admin.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:?set in .env}
    ports:
      - "8082:80"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: redis
    command: ["redis-server", "--appendonly", "yes"]
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 30
    restart: unless-stopped

  security-service:
    build:
      context: .
      args:
        RELEASE: 17
    image: security-service:latest
    container_name: security-service
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - .env
    environment:
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}
      PORT: ${PORT}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_NAME: ${DB_NAME}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      ALLOWED_ORIGINS: ${ALLOWED_ORIGINS}
      ACCESS_TOKEN_EXPIRATION_MS: ${ACCESS_TOKEN_EXPIRATION_MS}
      MAX_TOKEN: ${MAX_TOKEN}
      ISSUE_RATE_LIMIT: ${ISSUE_RATE_LIMIT}
      VALIDATE_RATE_LIMIT: ${VALIDATE_RATE_LIMIT}
      BLOCKED_PREFIX: ${BLOCKED_PREFIX}
      LOG_PATH: ${LOG_PATH}
      JAVA_OPTS: ${JAVA_OPTS}
    ports:
      - "8081:8081"
    volumes:
      - ${LOG_HOST_DIR}:/opt/app/logs
    logging:
      driver: "local"
      options:
        max-size: "10m"
        max-file: "5"
    restart: unless-stopped
    tmpfs:
      - /tmp

volumes:
  pg_data:
  pgadmin_data:
  redis_data: