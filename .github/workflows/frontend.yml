name: Deploy Frontend

on:
  push:
    branches: ['**']
    paths:
      - 'frontend/**'
      - 'devops/frontend/**'
  workflow_dispatch:

concurrency:
  group: deploy-frontend-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Deploy over SSH
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.CICD_SSH_HOST }}
          username: ${{ secrets.CICD_SSH_USER }}
          key: ${{ secrets.CICD_SSH_PRIVATE_KEY }}
          script: |
            set -euo pipefail

            BRANCH=${{ github.ref_name }}
            REPO_DIR=/home/${{ secrets.CICD_SSH_USER }}/VORIQ
            IMAGE=dev_front_node
            TAG=${{ github.sha }}
            CONTAINER=dev_front_node

            if [ ! -d "$REPO_DIR/.git" ]; then
              git clone https://github.com/in49-380/VORIQ.git "$REPO_DIR"
            fi

            cd "$REPO_DIR"
            git fetch --all --prune
            git checkout -B "$BRANCH" "origin/$BRANCH"
            git reset --hard "origin/$BRANCH"
            git clean -fdx

            cd "$REPO_DIR/frontend"

            docker build --pull --no-cache \
              -t "$IMAGE:$TAG" \
              -f "$REPO_DIR/devops/frontend/Dockerfile.front.develop" .

            docker rm -f "$CONTAINER" || true

            docker run -d --name "$CONTAINER" --restart unless-stopped \
              -p 3000:3000 \
              -e NODE_ENV=development \
              -e DEV_FRONT_GOOGLE_CLIENT_ID='${{ secrets.DEV_FRONT_GOOGLE_CLIENT_ID }}' \
              "$IMAGE:$TAG"


            docker image prune -f
