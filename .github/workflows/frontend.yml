name: Deploy Frontend

on:
  push:
    branches:
      - '*'
    paths:
      - 'frontend/**'
  workflow_dispatch:

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get branch name
        id: get_branch
        run: |
          if [ "$GITHUB_EVENT_NAME" == "pull_request" ]; then
            BRANCH_NAME=${GITHUB_HEAD_REF}
          else
            BRANCH_NAME=${GITHUB_REF#refs/heads/}
          fi
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV

      - name: Deploy to Server
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.CICD_SSH_HOST }}
          username: ${{ secrets.CICD_SSH_USER }}
          key: ${{ secrets.CICD_SSH_PRIVATE_KEY }}
          script: |

            # Ensure the VORIQ directory exists
            #mkdir -p /home/${{ secrets.CICD_SSH_USER }}/VORIQ

            cd /home/${{ secrets.CICD_SSH_USER }}

            #rm -rf VORIQ || true

            # Clone the repository if it doesn't exist
            [ ! -d "VORIQ" ] && git clone https://github.com/in49-380/VORIQ.git

            # Change to the VORIQ directory
            cd /home/${{ secrets.CICD_SSH_USER }}/VORIQ
            
            # Pull the latest changes
            git pull

            git checkout ${{ GITHUB_REF_NAME }}

            # Copy new files
            #rsync -avz --delete --exclude='.git/' /home/runner/work/VORIQ/VORIQ/ .
            #rsync -avz . /home/${{ secrets.CICD_SSH_USER }}/VORIQ/

            # go to the frontend project directory
            cd /home/${{ secrets.CICD_SSH_USER }}/VORIQ/frontend/

            echo ${{ secrets.DEV_FRONT_GOOGLE_CLIENT_ID }} > .env

            # build the frontend container
            docker image build -t dev_front_node:latest -f /home/${{ secrets.CICD_SSH_USER }}/VORIQ/devops/frontend/Dockerfile.front.develop .

            # remove old container if exists
            docker container rm -f dev_front_node || true

            # running new docker container
            docker container run -d --rm --name dev_front_node -p 3000:3000 -e NODE_ENV=development -v dev_front_node:/app dev_front_node:latest